# Generated by Django 3.1.6 on 2021-03-09 14:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('study_platform', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accessory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('graphic', models.ImageField(upload_to='')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='study_platform.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('card_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card_type', models.IntegerField()),
                ('card_content', models.TextField()),
                ('card_create_date', models.DateTimeField(auto_now_add=True)),
                ('card_creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('score', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Dummy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('is_welfare', models.BooleanField()),
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='study_platform.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='WelfareResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('percentage', models.IntegerField()),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='study_platform.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study_platform.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study_platform.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='study_platform.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField(db_index=True, verbose_name='object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_platform_tag_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_platform_tag_items', to='taggit.tag')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('is_tool', models.BooleanField()),
                ('description', models.TextField()),
                ('effect', models.CharField(choices=[('EMP', 'Empty'), ('POL', 'Police'), ('THF', 'Thief'), ('SHD', 'Shield'), ('BLN', 'Blind'), ('BST', 'Boost')], default='EMP', max_length=3)),
                ('graphic', models.ImageField(upload_to='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study_platform.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('MUL', 'Multiple Choice'), ('FIB', 'Fill Blank')], max_length=3)),
                ('content', models.TextField()),
                ('answer', models.TextField()),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='study_platform.course')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('opt_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('opt_type', models.CharField(default='TXT', max_length=3)),
                ('opt_content', models.CharField(max_length=512)),
                ('opt_isCorrect', models.BooleanField(default=False)),
                ('opt_cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study_platform.card')),
            ],
        ),
        migrations.CreateModel(
            name='Mod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('effect', models.CharField(max_length=20)),
                ('accessory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study_platform.accessory')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comt_id', models.UUIDField(default=uuid.UUID('f061917f-81c0-4c22-b32b-212c98761a3e'), editable=False, primary_key=True, serialize=False)),
                ('comt_type', models.CharField(max_length=1)),
                ('comt_father_id', models.CharField(max_length=64, null=True)),
                ('comt_content', models.TextField()),
                ('comt_time', models.DateTimeField(auto_now=True)),
                ('comt_like', models.IntegerField(default=0)),
                ('comt_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('coll_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('coll_title', models.CharField(max_length=64)),
                ('coll_description', models.CharField(max_length=512)),
                ('coll_create_date', models.DateTimeField(auto_now_add=True)),
                ('coll_cards', models.ManyToManyField(to='study_platform.Card')),
                ('coll_creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('coll_tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='study_platform.Tag', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.AddField(
            model_name='card',
            name='card_tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='study_platform.Tag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('blog_id', models.UUIDField(default=uuid.UUID('0e087f45-a0d1-4df3-8111-278ecbb457c0'), editable=False, primary_key=True, serialize=False)),
                ('blog_pin', models.BooleanField(default=False)),
                ('blog_title', models.CharField(max_length=64, null=True)),
                ('blog_content', models.TextField()),
                ('blog_time', models.DateTimeField(auto_now=True)),
                ('blog_tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='study_platform.Tag', to='taggit.Tag', verbose_name='Tags')),
                ('blog_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study_platform.userprofile')),
            ],
        ),
    ]
